<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
			"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lut.dao.UserDao">
	
	<resultMap type="User" id="UserResult"> 
		<id column="id" property="id" /> 
		<result column="account" property="account" /> 
		<result column="password" property="password" /> 
		<result column="power" property="power" /> 
		<result column="last_login_time" property="last_login_time" /> 
	</resultMap>
	<!-- 登录验证 -->
	<select id="selectUserByAccount" resultMap="UserResult" >
		select id, account, password, power, last_login_time
		from user
		where account=#{account} and password=#{password}
	</select>
	
	<resultMap type="UserInfo" id="UserInfoResult">
		<id column="id" property="id" />
		<result column="name" property="name"/>
		<result column="signature" property="signature"/>
		<result column="gender" property="gender"/>
		<result column="career" property="career"/>
		<result column="picture" property="picture"/>
		<result column="birthday" property="birthday"/>
		<result column="province" property="province"/>
		<result column="city" property="city"/>
		<result column="cellphone" property="cellphone"/>
		<result column="wechat" property="wechat"/>
		<result column="qq" property="qq"/>
		<result column="level" property="level"/>
		<result column="if_vip" property="if_vip"/>
		<result column="vip_level" property="vip_level"/>
		<result column="balance" property="balance"/>
	</resultMap>
	<!-- 用户信息 -->
	<select id="selectUserInfoById" resultMap="UserInfoResult">
		select a.id, name, signature, gender, career, picture, birthday, province, city, cellphone, wechat, qq, level, if_vip, vip_level, balance
		from user_info a
		left join user_ext b on a.id = b.id
		where a.id=#{id};
	</select>
	
	<!-- 关注数量 -->
	<select id="selectAttentionNumById" resultType="Integer">
		select count(*)
		from friends
		where id = #{id}
	</select>
	
	<!-- 粉丝数量 -->
	<select id="selectBeConcernedNumById" resultType="Integer">
		select count(*)
		from friends
		where friend_id = #{id}
	</select>
	
	<!-- 读后感数量 -->
	<select id="selectReactionNumById" resultType="Integer">
		select count(*)
		from collection_books
		where id = #{id} and reaction is not null
	</select>
	
	<!-- 注册用户账号信息 -->
	<insert id="insertUserAccount" parameterType="User" useGeneratedKeys="true" keyProperty="id">
		insert into user(
			account,
			password,
			power,
			last_login_time
		)
		values(
			#{account},
			#{password},
			#{power},
			#{last_login_time}
		);
	</insert>
	
	<!-- 注册用户基本信息 -->
	<insert id="insertUserInfo" parameterType="UserInfo">
		insert into user_info(
			id,
			name,
			signature,
			gender,
			career,
			picture,
			birthday,
			province,
			city
		)
		values(
			#{id},
			#{name},
			#{signature},
			#{gender},
			#{career},
			#{picture},
			#{birthday},
			#{province},
			#{city}
		)
	</insert>
	
	<!-- 注册用户拓展信息 -->
	<insert id="insertUserExt" parameterType="UserInfo">
		insert into user_ext(
			id,
			cellphone,
			wechat,
			qq,
			level,
			if_vip,
			balance
		)
		values(
			#{id},
			#{cellphone},
			#{wechat},
			#{qq},
			#{level},
			#{if_vip},
			#{balance}
		)
	</insert>
	
	<!-- 添加用户收藏书籍 -->
	<insert id="insertCollectionBookById" parameterType="UserCollectBook">
		insert into collection_books(
			id,
			book_id
		)
		values(
			#{id},
			#{book_id}
		)
	</insert>
	
	<!-- 删除用户收藏书籍 -->
	<delete id="deleteCollectionBookById" parameterType="UserCollectBook">
		delete from collection_books
		where id = #{id} and book_id = #{book_id}
	</delete>
	
	<resultMap type="FollowFans" id="FollowFansResult">
		<result column="id" property="id"/>
		<result column="friend_id" property="friend_id"/>
		<result column="friend_name" property="friend_name"/>
		<result column="friend_picture" property="friend_picture"/>
		<result column="friend_reaction" property="friend_reaction"/>
		<result column="friend_follow" property="friend_follow"/>
		<result column="friend_fans" property="friend_fans"/>
		<result column="tag" property="tag"/>
	</resultMap>
	<!-- 查找关注人信息 -->
	<select id="selectFollowee" resultMap="FollowFansResult" parameterType="int">
		select 
			#{id} as id,
			b.friend_id,
			c.name as friend_name,
			c.picture as friend_picture,
			d.friend_reaction,
			a.friend_follow,
			b.friend_fans
		from (
			select id, count(friend_id) as friend_follow
			from friends b
			where id in (
				select friend_id
				from friends d
				where id = #{id}
			)
			group by id
		) a
		left join (
			select friend_id, count(id) as friend_fans
			from friends c
			where friend_id in (
				select friend_id
				from friends d
				where id = #{id}
			)
			group by friend_id
		) b on a.id = b.friend_id
		left join user_info c on c.id = b.friend_id
		left join (
			select id, count(reaction) as friend_reaction
			from collection_books
			where id in(
				select friend_id
				from friends d
				where id = #{id}
			) 
			group by id
		) d on d.id = b.friend_id
	</select>
	
	<!-- 查找粉丝信息 -->	
	<select id="selectFans" resultMap="FollowFansResult" parameterType="int">
		select
			id,
			friend_id,
			friend_name,
			friend_picture,
			friend_reaction,
			friend_follow,
			friend_fans,
			case when friend_id in (select friend_id from friends where id=#{id}) then 1
			else 0 end as tag
		from (
			select 
				#{id} as id,
				b.friend_id,
				c.name as friend_name,
				c.picture as friend_picture,
				d.friend_reaction,
				a.friend_follow,
				b.friend_fans
			from (
				select id, count(friend_id) as friend_follow
				from friends b
				where id in (
					select id
					from friends d
					where friend_id = #{id}
				)
				group by id
			) a
			left join (
				select friend_id, count(id) as friend_fans
				from friends c
				where friend_id in (
					select id
					from friends d
					where friend_id = #{id}
				)
				group by friend_id
			) b on a.id = b.friend_id
			left join user_info c on c.id = b.friend_id
			left join (
				select id, count(reaction) as friend_reaction
				from collection_books
				where id in(
					select id
					from friends d
					where friend_id = #{id}
				) 
				group by id
			) d on d.id = b.friend_id
		) a
	</select>
	
	<!-- 添加关注 -->
	<insert id="insertAttentionById" parameterType="UserAttention">
		insert into friends(
			id,
			friend_id,
			degree
		)
		values(
			#{id},
			#{friend_id},
			50
		)
	</insert>
	
	<!-- 取消关注 -->
	<delete id="deleteAttentionById" parameterType="UserAttention">
		delete from friends
		where id = #{id} and friend_id = #{friend_id}
	</delete>
	
	<select id="AccountIfExists" parameterType="String" resultMap="UserResult">
		select account
		from user
		where account = #{account}
	</select>
	
	<resultMap type="FollowInfo" id="FollowInfoResult">
		<result column="id" property="id"/>
		<result column="friend_id" property="friend_id"/>
		<result column="name" property="name"/>
		<result column="gender" property="gender"/>
		<result column="career" property="career"/>
		<result column="city" property="city"/>
	</resultMap>
	<!-- 关注列表 -->
	<select id="selectFollowInfo" parameterType="int" resultMap="FollowInfoResult">
		select
			a.id as id,
			a.friend_id as friend_id,
			b.name as name,
			b.gender as gender,
			b.career as career,
			b.city as city
		from friends a
		left join user_info b on a.friend_id = b.id
		where a.id = #{id}
	</select>
	
	<resultMap type="RecFriend" id="RecFriendResult">
		<result column="rec_day" property="rec_day"/>
		<result column="id" property="id"/>
		<result column="friend_id" property="friend_id"/>
		<result column="rec_degree" property="rec_degree"/>
		<association property="userInfo" resultMap="UserInfoResult"/>
	</resultMap>
	<!-- 感兴趣的人 -->
	<select id="selectRecFriend" parameterType="int" resultMap="RecFriendResult">
		select
			rec_day,
			a.id,
			friend_id,
			rec_degree,
			b.name,
			b.picture
		from recommendation_friends a
		left join user_info b on a.friend_id = b.id
		where a.id = #{id}
		limit 5;
	</select>
</mapper>
